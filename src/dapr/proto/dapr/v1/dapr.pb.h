// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/proto/dapr/v1/dapr.proto

#ifndef PROTOBUF_INCLUDED_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto
#define PROTOBUF_INCLUDED_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/duration.pb.h>
#include "dapr/proto/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto 

namespace protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto
namespace dapr {
namespace proto {
namespace dapr {
namespace v1 {
class DeleteStateEnvelope;
class DeleteStateEnvelopeDefaultTypeInternal;
extern DeleteStateEnvelopeDefaultTypeInternal _DeleteStateEnvelope_default_instance_;
class GetSecretEnvelope;
class GetSecretEnvelopeDefaultTypeInternal;
extern GetSecretEnvelopeDefaultTypeInternal _GetSecretEnvelope_default_instance_;
class GetSecretEnvelope_MetadataEntry_DoNotUse;
class GetSecretEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetSecretEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal _GetSecretEnvelope_MetadataEntry_DoNotUse_default_instance_;
class GetSecretResponseEnvelope;
class GetSecretResponseEnvelopeDefaultTypeInternal;
extern GetSecretResponseEnvelopeDefaultTypeInternal _GetSecretResponseEnvelope_default_instance_;
class GetSecretResponseEnvelope_DataEntry_DoNotUse;
class GetSecretResponseEnvelope_DataEntry_DoNotUseDefaultTypeInternal;
extern GetSecretResponseEnvelope_DataEntry_DoNotUseDefaultTypeInternal _GetSecretResponseEnvelope_DataEntry_DoNotUse_default_instance_;
class GetStateEnvelope;
class GetStateEnvelopeDefaultTypeInternal;
extern GetStateEnvelopeDefaultTypeInternal _GetStateEnvelope_default_instance_;
class GetStateResponseEnvelope;
class GetStateResponseEnvelopeDefaultTypeInternal;
extern GetStateResponseEnvelopeDefaultTypeInternal _GetStateResponseEnvelope_default_instance_;
class InvokeBindingEnvelope;
class InvokeBindingEnvelopeDefaultTypeInternal;
extern InvokeBindingEnvelopeDefaultTypeInternal _InvokeBindingEnvelope_default_instance_;
class InvokeBindingEnvelope_MetadataEntry_DoNotUse;
class InvokeBindingEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeBindingEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingEnvelope_MetadataEntry_DoNotUse_default_instance_;
class InvokeServiceRequest;
class InvokeServiceRequestDefaultTypeInternal;
extern InvokeServiceRequestDefaultTypeInternal _InvokeServiceRequest_default_instance_;
class PublishEventEnvelope;
class PublishEventEnvelopeDefaultTypeInternal;
extern PublishEventEnvelopeDefaultTypeInternal _PublishEventEnvelope_default_instance_;
class RetryPolicy;
class RetryPolicyDefaultTypeInternal;
extern RetryPolicyDefaultTypeInternal _RetryPolicy_default_instance_;
class SaveStateEnvelope;
class SaveStateEnvelopeDefaultTypeInternal;
extern SaveStateEnvelopeDefaultTypeInternal _SaveStateEnvelope_default_instance_;
class State;
class StateDefaultTypeInternal;
extern StateDefaultTypeInternal _State_default_instance_;
class StateOptions;
class StateOptionsDefaultTypeInternal;
extern StateOptionsDefaultTypeInternal _StateOptions_default_instance_;
class StateRequest;
class StateRequestDefaultTypeInternal;
extern StateRequestDefaultTypeInternal _StateRequest_default_instance_;
class StateRequest_MetadataEntry_DoNotUse;
class StateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern StateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _StateRequest_MetadataEntry_DoNotUse_default_instance_;
class State_MetadataEntry_DoNotUse;
class State_MetadataEntry_DoNotUseDefaultTypeInternal;
extern State_MetadataEntry_DoNotUseDefaultTypeInternal _State_MetadataEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace dapr
}  // namespace proto
}  // namespace dapr
namespace google {
namespace protobuf {
template<> ::dapr::proto::dapr::v1::DeleteStateEnvelope* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::DeleteStateEnvelope>(Arena*);
template<> ::dapr::proto::dapr::v1::GetSecretEnvelope* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::GetSecretEnvelope>(Arena*);
template<> ::dapr::proto::dapr::v1::GetSecretEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::GetSecretEnvelope_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::dapr::v1::GetSecretResponseEnvelope* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::GetSecretResponseEnvelope>(Arena*);
template<> ::dapr::proto::dapr::v1::GetSecretResponseEnvelope_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::GetSecretResponseEnvelope_DataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::dapr::v1::GetStateEnvelope* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::GetStateEnvelope>(Arena*);
template<> ::dapr::proto::dapr::v1::GetStateResponseEnvelope* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::GetStateResponseEnvelope>(Arena*);
template<> ::dapr::proto::dapr::v1::InvokeBindingEnvelope* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::InvokeBindingEnvelope>(Arena*);
template<> ::dapr::proto::dapr::v1::InvokeBindingEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::InvokeBindingEnvelope_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::dapr::v1::InvokeServiceRequest* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::InvokeServiceRequest>(Arena*);
template<> ::dapr::proto::dapr::v1::PublishEventEnvelope* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::PublishEventEnvelope>(Arena*);
template<> ::dapr::proto::dapr::v1::RetryPolicy* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::RetryPolicy>(Arena*);
template<> ::dapr::proto::dapr::v1::SaveStateEnvelope* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::SaveStateEnvelope>(Arena*);
template<> ::dapr::proto::dapr::v1::State* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::State>(Arena*);
template<> ::dapr::proto::dapr::v1::StateOptions* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::StateOptions>(Arena*);
template<> ::dapr::proto::dapr::v1::StateRequest* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::StateRequest>(Arena*);
template<> ::dapr::proto::dapr::v1::StateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::StateRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::dapr::v1::State_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::dapr::v1::State_MetadataEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dapr {
namespace proto {
namespace dapr {
namespace v1 {

// ===================================================================

class InvokeServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.InvokeServiceRequest) */ {
 public:
  InvokeServiceRequest();
  virtual ~InvokeServiceRequest();

  InvokeServiceRequest(const InvokeServiceRequest& from);

  inline InvokeServiceRequest& operator=(const InvokeServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeServiceRequest(InvokeServiceRequest&& from) noexcept
    : InvokeServiceRequest() {
    *this = ::std::move(from);
  }

  inline InvokeServiceRequest& operator=(InvokeServiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeServiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeServiceRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeServiceRequest*>(
               &_InvokeServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(InvokeServiceRequest* other);
  friend void swap(InvokeServiceRequest& a, InvokeServiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeServiceRequest* New() const final {
    return CreateMaybeMessage<InvokeServiceRequest>(NULL);
  }

  InvokeServiceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeServiceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeServiceRequest& from);
  void MergeFrom(const InvokeServiceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeServiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .dapr.proto.common.v1.InvokeRequest message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  private:
  const ::dapr::proto::common::v1::InvokeRequest& _internal_message() const;
  public:
  const ::dapr::proto::common::v1::InvokeRequest& message() const;
  ::dapr::proto::common::v1::InvokeRequest* release_message();
  ::dapr::proto::common::v1::InvokeRequest* mutable_message();
  void set_allocated_message(::dapr::proto::common::v1::InvokeRequest* message);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.InvokeServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::dapr::proto::common::v1::InvokeRequest* message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStateEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.DeleteStateEnvelope) */ {
 public:
  DeleteStateEnvelope();
  virtual ~DeleteStateEnvelope();

  DeleteStateEnvelope(const DeleteStateEnvelope& from);

  inline DeleteStateEnvelope& operator=(const DeleteStateEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteStateEnvelope(DeleteStateEnvelope&& from) noexcept
    : DeleteStateEnvelope() {
    *this = ::std::move(from);
  }

  inline DeleteStateEnvelope& operator=(DeleteStateEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStateEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteStateEnvelope* internal_default_instance() {
    return reinterpret_cast<const DeleteStateEnvelope*>(
               &_DeleteStateEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DeleteStateEnvelope* other);
  friend void swap(DeleteStateEnvelope& a, DeleteStateEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteStateEnvelope* New() const final {
    return CreateMaybeMessage<DeleteStateEnvelope>(NULL);
  }

  DeleteStateEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteStateEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteStateEnvelope& from);
  void MergeFrom(const DeleteStateEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteStateEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string etag = 3;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // .dapr.proto.dapr.v1.StateOptions options = 4;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 4;
  private:
  const ::dapr::proto::dapr::v1::StateOptions& _internal_options() const;
  public:
  const ::dapr::proto::dapr::v1::StateOptions& options() const;
  ::dapr::proto::dapr::v1::StateOptions* release_options();
  ::dapr::proto::dapr::v1::StateOptions* mutable_options();
  void set_allocated_options(::dapr::proto::dapr::v1::StateOptions* options);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.DeleteStateEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::dapr::proto::dapr::v1::StateOptions* options_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveStateEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.SaveStateEnvelope) */ {
 public:
  SaveStateEnvelope();
  virtual ~SaveStateEnvelope();

  SaveStateEnvelope(const SaveStateEnvelope& from);

  inline SaveStateEnvelope& operator=(const SaveStateEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveStateEnvelope(SaveStateEnvelope&& from) noexcept
    : SaveStateEnvelope() {
    *this = ::std::move(from);
  }

  inline SaveStateEnvelope& operator=(SaveStateEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveStateEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SaveStateEnvelope* internal_default_instance() {
    return reinterpret_cast<const SaveStateEnvelope*>(
               &_SaveStateEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SaveStateEnvelope* other);
  friend void swap(SaveStateEnvelope& a, SaveStateEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveStateEnvelope* New() const final {
    return CreateMaybeMessage<SaveStateEnvelope>(NULL);
  }

  SaveStateEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SaveStateEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SaveStateEnvelope& from);
  void MergeFrom(const SaveStateEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SaveStateEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.dapr.v1.StateRequest requests = 2;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 2;
  ::dapr::proto::dapr::v1::StateRequest* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::dapr::v1::StateRequest >*
      mutable_requests();
  const ::dapr::proto::dapr::v1::StateRequest& requests(int index) const;
  ::dapr::proto::dapr::v1::StateRequest* add_requests();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::dapr::v1::StateRequest >&
      requests() const;

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.SaveStateEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::dapr::v1::StateRequest > requests_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetStateEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.GetStateEnvelope) */ {
 public:
  GetStateEnvelope();
  virtual ~GetStateEnvelope();

  GetStateEnvelope(const GetStateEnvelope& from);

  inline GetStateEnvelope& operator=(const GetStateEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateEnvelope(GetStateEnvelope&& from) noexcept
    : GetStateEnvelope() {
    *this = ::std::move(from);
  }

  inline GetStateEnvelope& operator=(GetStateEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStateEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateEnvelope* internal_default_instance() {
    return reinterpret_cast<const GetStateEnvelope*>(
               &_GetStateEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetStateEnvelope* other);
  friend void swap(GetStateEnvelope& a, GetStateEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateEnvelope* New() const final {
    return CreateMaybeMessage<GetStateEnvelope>(NULL);
  }

  GetStateEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateEnvelope& from);
  void MergeFrom(const GetStateEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string consistency = 3;
  void clear_consistency();
  static const int kConsistencyFieldNumber = 3;
  const ::std::string& consistency() const;
  void set_consistency(const ::std::string& value);
  #if LANG_CXX11
  void set_consistency(::std::string&& value);
  #endif
  void set_consistency(const char* value);
  void set_consistency(const char* value, size_t size);
  ::std::string* mutable_consistency();
  ::std::string* release_consistency();
  void set_allocated_consistency(::std::string* consistency);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.GetStateEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr consistency_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetStateResponseEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.GetStateResponseEnvelope) */ {
 public:
  GetStateResponseEnvelope();
  virtual ~GetStateResponseEnvelope();

  GetStateResponseEnvelope(const GetStateResponseEnvelope& from);

  inline GetStateResponseEnvelope& operator=(const GetStateResponseEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateResponseEnvelope(GetStateResponseEnvelope&& from) noexcept
    : GetStateResponseEnvelope() {
    *this = ::std::move(from);
  }

  inline GetStateResponseEnvelope& operator=(GetStateResponseEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStateResponseEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateResponseEnvelope* internal_default_instance() {
    return reinterpret_cast<const GetStateResponseEnvelope*>(
               &_GetStateResponseEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetStateResponseEnvelope* other);
  friend void swap(GetStateResponseEnvelope& a, GetStateResponseEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateResponseEnvelope* New() const final {
    return CreateMaybeMessage<GetStateResponseEnvelope>(NULL);
  }

  GetStateResponseEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateResponseEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateResponseEnvelope& from);
  void MergeFrom(const GetStateResponseEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateResponseEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string etag = 2;
  void clear_etag();
  static const int kEtagFieldNumber = 2;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // .google.protobuf.Any data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  private:
  const ::google::protobuf::Any& _internal_data() const;
  public:
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.GetStateResponseEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::Any* data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSecretEnvelope_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetSecretEnvelope_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetSecretEnvelope_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetSecretEnvelope_MetadataEntry_DoNotUse();
  GetSecretEnvelope_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetSecretEnvelope_MetadataEntry_DoNotUse& other);
  static const GetSecretEnvelope_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSecretEnvelope_MetadataEntry_DoNotUse*>(&_GetSecretEnvelope_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetSecretEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.GetSecretEnvelope) */ {
 public:
  GetSecretEnvelope();
  virtual ~GetSecretEnvelope();

  GetSecretEnvelope(const GetSecretEnvelope& from);

  inline GetSecretEnvelope& operator=(const GetSecretEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSecretEnvelope(GetSecretEnvelope&& from) noexcept
    : GetSecretEnvelope() {
    *this = ::std::move(from);
  }

  inline GetSecretEnvelope& operator=(GetSecretEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSecretEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSecretEnvelope* internal_default_instance() {
    return reinterpret_cast<const GetSecretEnvelope*>(
               &_GetSecretEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GetSecretEnvelope* other);
  friend void swap(GetSecretEnvelope& a, GetSecretEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSecretEnvelope* New() const final {
    return CreateMaybeMessage<GetSecretEnvelope>(NULL);
  }

  GetSecretEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSecretEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSecretEnvelope& from);
  void MergeFrom(const GetSecretEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSecretEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.GetSecretEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetSecretEnvelope_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSecretResponseEnvelope_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetSecretResponseEnvelope_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetSecretResponseEnvelope_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetSecretResponseEnvelope_DataEntry_DoNotUse();
  GetSecretResponseEnvelope_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetSecretResponseEnvelope_DataEntry_DoNotUse& other);
  static const GetSecretResponseEnvelope_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSecretResponseEnvelope_DataEntry_DoNotUse*>(&_GetSecretResponseEnvelope_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetSecretResponseEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.GetSecretResponseEnvelope) */ {
 public:
  GetSecretResponseEnvelope();
  virtual ~GetSecretResponseEnvelope();

  GetSecretResponseEnvelope(const GetSecretResponseEnvelope& from);

  inline GetSecretResponseEnvelope& operator=(const GetSecretResponseEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSecretResponseEnvelope(GetSecretResponseEnvelope&& from) noexcept
    : GetSecretResponseEnvelope() {
    *this = ::std::move(from);
  }

  inline GetSecretResponseEnvelope& operator=(GetSecretResponseEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSecretResponseEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSecretResponseEnvelope* internal_default_instance() {
    return reinterpret_cast<const GetSecretResponseEnvelope*>(
               &_GetSecretResponseEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetSecretResponseEnvelope* other);
  friend void swap(GetSecretResponseEnvelope& a, GetSecretResponseEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSecretResponseEnvelope* New() const final {
    return CreateMaybeMessage<GetSecretResponseEnvelope>(NULL);
  }

  GetSecretResponseEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSecretResponseEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSecretResponseEnvelope& from);
  void MergeFrom(const GetSecretResponseEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSecretResponseEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.GetSecretResponseEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetSecretResponseEnvelope_DataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeBindingEnvelope_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<InvokeBindingEnvelope_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeBindingEnvelope_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  InvokeBindingEnvelope_MetadataEntry_DoNotUse();
  InvokeBindingEnvelope_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeBindingEnvelope_MetadataEntry_DoNotUse& other);
  static const InvokeBindingEnvelope_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeBindingEnvelope_MetadataEntry_DoNotUse*>(&_InvokeBindingEnvelope_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class InvokeBindingEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.InvokeBindingEnvelope) */ {
 public:
  InvokeBindingEnvelope();
  virtual ~InvokeBindingEnvelope();

  InvokeBindingEnvelope(const InvokeBindingEnvelope& from);

  inline InvokeBindingEnvelope& operator=(const InvokeBindingEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeBindingEnvelope(InvokeBindingEnvelope&& from) noexcept
    : InvokeBindingEnvelope() {
    *this = ::std::move(from);
  }

  inline InvokeBindingEnvelope& operator=(InvokeBindingEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeBindingEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeBindingEnvelope* internal_default_instance() {
    return reinterpret_cast<const InvokeBindingEnvelope*>(
               &_InvokeBindingEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(InvokeBindingEnvelope* other);
  friend void swap(InvokeBindingEnvelope& a, InvokeBindingEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeBindingEnvelope* New() const final {
    return CreateMaybeMessage<InvokeBindingEnvelope>(NULL);
  }

  InvokeBindingEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeBindingEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeBindingEnvelope& from);
  void MergeFrom(const InvokeBindingEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeBindingEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.protobuf.Any data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  private:
  const ::google::protobuf::Any& _internal_data() const;
  public:
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.InvokeBindingEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      InvokeBindingEnvelope_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::Any* data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishEventEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.PublishEventEnvelope) */ {
 public:
  PublishEventEnvelope();
  virtual ~PublishEventEnvelope();

  PublishEventEnvelope(const PublishEventEnvelope& from);

  inline PublishEventEnvelope& operator=(const PublishEventEnvelope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishEventEnvelope(PublishEventEnvelope&& from) noexcept
    : PublishEventEnvelope() {
    *this = ::std::move(from);
  }

  inline PublishEventEnvelope& operator=(PublishEventEnvelope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishEventEnvelope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishEventEnvelope* internal_default_instance() {
    return reinterpret_cast<const PublishEventEnvelope*>(
               &_PublishEventEnvelope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(PublishEventEnvelope* other);
  friend void swap(PublishEventEnvelope& a, PublishEventEnvelope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishEventEnvelope* New() const final {
    return CreateMaybeMessage<PublishEventEnvelope>(NULL);
  }

  PublishEventEnvelope* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishEventEnvelope>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishEventEnvelope& from);
  void MergeFrom(const PublishEventEnvelope& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishEventEnvelope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string topic = 1;
  void clear_topic();
  static const int kTopicFieldNumber = 1;
  const ::std::string& topic() const;
  void set_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_topic(::std::string&& value);
  #endif
  void set_topic(const char* value);
  void set_topic(const char* value, size_t size);
  ::std::string* mutable_topic();
  ::std::string* release_topic();
  void set_allocated_topic(::std::string* topic);

  // .google.protobuf.Any data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  private:
  const ::google::protobuf::Any& _internal_data() const;
  public:
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.PublishEventEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr topic_;
  ::google::protobuf::Any* data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class State_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<State_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<State_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  State_MetadataEntry_DoNotUse();
  State_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const State_MetadataEntry_DoNotUse& other);
  static const State_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const State_MetadataEntry_DoNotUse*>(&_State_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.State) */ {
 public:
  State();
  virtual ~State();

  State(const State& from);

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  State(State&& from) noexcept
    : State() {
    *this = ::std::move(from);
  }

  inline State& operator=(State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const State* internal_default_instance() {
    return reinterpret_cast<const State*>(
               &_State_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(State* other);
  friend void swap(State& a, State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline State* New() const final {
    return CreateMaybeMessage<State>(NULL);
  }

  State* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<State>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const State& from);
  void MergeFrom(const State& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string etag = 3;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // .google.protobuf.Any value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  private:
  const ::google::protobuf::Any& _internal_value() const;
  public:
  const ::google::protobuf::Any& value() const;
  ::google::protobuf::Any* release_value();
  ::google::protobuf::Any* mutable_value();
  void set_allocated_value(::google::protobuf::Any* value);

  // .dapr.proto.dapr.v1.StateOptions options = 5;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 5;
  private:
  const ::dapr::proto::dapr::v1::StateOptions& _internal_options() const;
  public:
  const ::dapr::proto::dapr::v1::StateOptions& options() const;
  ::dapr::proto::dapr::v1::StateOptions* release_options();
  ::dapr::proto::dapr::v1::StateOptions* mutable_options();
  void set_allocated_options(::dapr::proto::dapr::v1::StateOptions* options);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      State_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::Any* value_;
  ::dapr::proto::dapr::v1::StateOptions* options_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StateOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.StateOptions) */ {
 public:
  StateOptions();
  virtual ~StateOptions();

  StateOptions(const StateOptions& from);

  inline StateOptions& operator=(const StateOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateOptions(StateOptions&& from) noexcept
    : StateOptions() {
    *this = ::std::move(from);
  }

  inline StateOptions& operator=(StateOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateOptions* internal_default_instance() {
    return reinterpret_cast<const StateOptions*>(
               &_StateOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(StateOptions* other);
  friend void swap(StateOptions& a, StateOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateOptions* New() const final {
    return CreateMaybeMessage<StateOptions>(NULL);
  }

  StateOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StateOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StateOptions& from);
  void MergeFrom(const StateOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StateOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string concurrency = 1;
  void clear_concurrency();
  static const int kConcurrencyFieldNumber = 1;
  const ::std::string& concurrency() const;
  void set_concurrency(const ::std::string& value);
  #if LANG_CXX11
  void set_concurrency(::std::string&& value);
  #endif
  void set_concurrency(const char* value);
  void set_concurrency(const char* value, size_t size);
  ::std::string* mutable_concurrency();
  ::std::string* release_concurrency();
  void set_allocated_concurrency(::std::string* concurrency);

  // string consistency = 2;
  void clear_consistency();
  static const int kConsistencyFieldNumber = 2;
  const ::std::string& consistency() const;
  void set_consistency(const ::std::string& value);
  #if LANG_CXX11
  void set_consistency(::std::string&& value);
  #endif
  void set_consistency(const char* value);
  void set_consistency(const char* value, size_t size);
  ::std::string* mutable_consistency();
  ::std::string* release_consistency();
  void set_allocated_consistency(::std::string* consistency);

  // .dapr.proto.dapr.v1.RetryPolicy retry_policy = 3;
  bool has_retry_policy() const;
  void clear_retry_policy();
  static const int kRetryPolicyFieldNumber = 3;
  private:
  const ::dapr::proto::dapr::v1::RetryPolicy& _internal_retry_policy() const;
  public:
  const ::dapr::proto::dapr::v1::RetryPolicy& retry_policy() const;
  ::dapr::proto::dapr::v1::RetryPolicy* release_retry_policy();
  ::dapr::proto::dapr::v1::RetryPolicy* mutable_retry_policy();
  void set_allocated_retry_policy(::dapr::proto::dapr::v1::RetryPolicy* retry_policy);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.StateOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr concurrency_;
  ::google::protobuf::internal::ArenaStringPtr consistency_;
  ::dapr::proto::dapr::v1::RetryPolicy* retry_policy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RetryPolicy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.RetryPolicy) */ {
 public:
  RetryPolicy();
  virtual ~RetryPolicy();

  RetryPolicy(const RetryPolicy& from);

  inline RetryPolicy& operator=(const RetryPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RetryPolicy(RetryPolicy&& from) noexcept
    : RetryPolicy() {
    *this = ::std::move(from);
  }

  inline RetryPolicy& operator=(RetryPolicy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RetryPolicy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RetryPolicy* internal_default_instance() {
    return reinterpret_cast<const RetryPolicy*>(
               &_RetryPolicy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(RetryPolicy* other);
  friend void swap(RetryPolicy& a, RetryPolicy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RetryPolicy* New() const final {
    return CreateMaybeMessage<RetryPolicy>(NULL);
  }

  RetryPolicy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RetryPolicy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RetryPolicy& from);
  void MergeFrom(const RetryPolicy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RetryPolicy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string pattern = 2;
  void clear_pattern();
  static const int kPatternFieldNumber = 2;
  const ::std::string& pattern() const;
  void set_pattern(const ::std::string& value);
  #if LANG_CXX11
  void set_pattern(::std::string&& value);
  #endif
  void set_pattern(const char* value);
  void set_pattern(const char* value, size_t size);
  ::std::string* mutable_pattern();
  ::std::string* release_pattern();
  void set_allocated_pattern(::std::string* pattern);

  // .google.protobuf.Duration interval = 3;
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 3;
  private:
  const ::google::protobuf::Duration& _internal_interval() const;
  public:
  const ::google::protobuf::Duration& interval() const;
  ::google::protobuf::Duration* release_interval();
  ::google::protobuf::Duration* mutable_interval();
  void set_allocated_interval(::google::protobuf::Duration* interval);

  // int32 threshold = 1;
  void clear_threshold();
  static const int kThresholdFieldNumber = 1;
  ::google::protobuf::int32 threshold() const;
  void set_threshold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.RetryPolicy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pattern_;
  ::google::protobuf::Duration* interval_;
  ::google::protobuf::int32 threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StateRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<StateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<StateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  StateRequest_MetadataEntry_DoNotUse();
  StateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const StateRequest_MetadataEntry_DoNotUse& other);
  static const StateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const StateRequest_MetadataEntry_DoNotUse*>(&_StateRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class StateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.dapr.v1.StateRequest) */ {
 public:
  StateRequest();
  virtual ~StateRequest();

  StateRequest(const StateRequest& from);

  inline StateRequest& operator=(const StateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateRequest(StateRequest&& from) noexcept
    : StateRequest() {
    *this = ::std::move(from);
  }

  inline StateRequest& operator=(StateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateRequest* internal_default_instance() {
    return reinterpret_cast<const StateRequest*>(
               &_StateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(StateRequest* other);
  friend void swap(StateRequest& a, StateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateRequest* New() const final {
    return CreateMaybeMessage<StateRequest>(NULL);
  }

  StateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StateRequest& from);
  void MergeFrom(const StateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string etag = 3;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // .google.protobuf.Any value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  private:
  const ::google::protobuf::Any& _internal_value() const;
  public:
  const ::google::protobuf::Any& value() const;
  ::google::protobuf::Any* release_value();
  ::google::protobuf::Any* mutable_value();
  void set_allocated_value(::google::protobuf::Any* value);

  // .dapr.proto.dapr.v1.StateOptions options = 5;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 5;
  private:
  const ::dapr::proto::dapr::v1::StateOptions& _internal_options() const;
  public:
  const ::dapr::proto::dapr::v1::StateOptions& options() const;
  ::dapr::proto::dapr::v1::StateOptions* release_options();
  ::dapr::proto::dapr::v1::StateOptions* mutable_options();
  void set_allocated_options(::dapr::proto::dapr::v1::StateOptions* options);

  // @@protoc_insertion_point(class_scope:dapr.proto.dapr.v1.StateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      StateRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::Any* value_;
  ::dapr::proto::dapr::v1::StateOptions* options_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InvokeServiceRequest

// string id = 1;
inline void InvokeServiceRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeServiceRequest::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.InvokeServiceRequest.id)
  return id_.GetNoArena();
}
inline void InvokeServiceRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.InvokeServiceRequest.id)
}
#if LANG_CXX11
inline void InvokeServiceRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.InvokeServiceRequest.id)
}
#endif
inline void InvokeServiceRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.InvokeServiceRequest.id)
}
inline void InvokeServiceRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.InvokeServiceRequest.id)
}
inline ::std::string* InvokeServiceRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.InvokeServiceRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeServiceRequest::release_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.InvokeServiceRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeServiceRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.InvokeServiceRequest.id)
}

// .dapr.proto.common.v1.InvokeRequest message = 3;
inline bool InvokeServiceRequest::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
inline const ::dapr::proto::common::v1::InvokeRequest& InvokeServiceRequest::_internal_message() const {
  return *message_;
}
inline const ::dapr::proto::common::v1::InvokeRequest& InvokeServiceRequest::message() const {
  const ::dapr::proto::common::v1::InvokeRequest* p = message_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.InvokeServiceRequest.message)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::InvokeRequest*>(
      &::dapr::proto::common::v1::_InvokeRequest_default_instance_);
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::release_message() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.InvokeServiceRequest.message)
  
  ::dapr::proto::common::v1::InvokeRequest* temp = message_;
  message_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::mutable_message() {
  
  if (message_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::InvokeRequest>(GetArenaNoVirtual());
    message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.InvokeServiceRequest.message)
  return message_;
}
inline void InvokeServiceRequest::set_allocated_message(::dapr::proto::common::v1::InvokeRequest* message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_);
  }
  if (message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    
  } else {
    
  }
  message_ = message;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.InvokeServiceRequest.message)
}

// -------------------------------------------------------------------

// DeleteStateEnvelope

// string store_name = 1;
inline void DeleteStateEnvelope::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStateEnvelope::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.DeleteStateEnvelope.store_name)
  return store_name_.GetNoArena();
}
inline void DeleteStateEnvelope::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.DeleteStateEnvelope.store_name)
}
#if LANG_CXX11
inline void DeleteStateEnvelope::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.DeleteStateEnvelope.store_name)
}
#endif
inline void DeleteStateEnvelope::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.DeleteStateEnvelope.store_name)
}
inline void DeleteStateEnvelope::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.DeleteStateEnvelope.store_name)
}
inline ::std::string* DeleteStateEnvelope::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.DeleteStateEnvelope.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStateEnvelope::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.DeleteStateEnvelope.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStateEnvelope::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.DeleteStateEnvelope.store_name)
}

// string key = 2;
inline void DeleteStateEnvelope::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStateEnvelope::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.DeleteStateEnvelope.key)
  return key_.GetNoArena();
}
inline void DeleteStateEnvelope::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.DeleteStateEnvelope.key)
}
#if LANG_CXX11
inline void DeleteStateEnvelope::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.DeleteStateEnvelope.key)
}
#endif
inline void DeleteStateEnvelope::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.DeleteStateEnvelope.key)
}
inline void DeleteStateEnvelope::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.DeleteStateEnvelope.key)
}
inline ::std::string* DeleteStateEnvelope::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.DeleteStateEnvelope.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStateEnvelope::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.DeleteStateEnvelope.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStateEnvelope::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.DeleteStateEnvelope.key)
}

// string etag = 3;
inline void DeleteStateEnvelope::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStateEnvelope::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.DeleteStateEnvelope.etag)
  return etag_.GetNoArena();
}
inline void DeleteStateEnvelope::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.DeleteStateEnvelope.etag)
}
#if LANG_CXX11
inline void DeleteStateEnvelope::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.DeleteStateEnvelope.etag)
}
#endif
inline void DeleteStateEnvelope::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.DeleteStateEnvelope.etag)
}
inline void DeleteStateEnvelope::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.DeleteStateEnvelope.etag)
}
inline ::std::string* DeleteStateEnvelope::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.DeleteStateEnvelope.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStateEnvelope::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.DeleteStateEnvelope.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStateEnvelope::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.DeleteStateEnvelope.etag)
}

// .dapr.proto.dapr.v1.StateOptions options = 4;
inline bool DeleteStateEnvelope::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
inline void DeleteStateEnvelope::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
}
inline const ::dapr::proto::dapr::v1::StateOptions& DeleteStateEnvelope::_internal_options() const {
  return *options_;
}
inline const ::dapr::proto::dapr::v1::StateOptions& DeleteStateEnvelope::options() const {
  const ::dapr::proto::dapr::v1::StateOptions* p = options_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.DeleteStateEnvelope.options)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::dapr::v1::StateOptions*>(
      &::dapr::proto::dapr::v1::_StateOptions_default_instance_);
}
inline ::dapr::proto::dapr::v1::StateOptions* DeleteStateEnvelope::release_options() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.DeleteStateEnvelope.options)
  
  ::dapr::proto::dapr::v1::StateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline ::dapr::proto::dapr::v1::StateOptions* DeleteStateEnvelope::mutable_options() {
  
  if (options_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::dapr::v1::StateOptions>(GetArenaNoVirtual());
    options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.DeleteStateEnvelope.options)
  return options_;
}
inline void DeleteStateEnvelope::set_allocated_options(::dapr::proto::dapr::v1::StateOptions* options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete options_;
  }
  if (options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    
  } else {
    
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.DeleteStateEnvelope.options)
}

// -------------------------------------------------------------------

// SaveStateEnvelope

// string store_name = 1;
inline void SaveStateEnvelope::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SaveStateEnvelope::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.SaveStateEnvelope.store_name)
  return store_name_.GetNoArena();
}
inline void SaveStateEnvelope::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.SaveStateEnvelope.store_name)
}
#if LANG_CXX11
inline void SaveStateEnvelope::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.SaveStateEnvelope.store_name)
}
#endif
inline void SaveStateEnvelope::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.SaveStateEnvelope.store_name)
}
inline void SaveStateEnvelope::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.SaveStateEnvelope.store_name)
}
inline ::std::string* SaveStateEnvelope::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.SaveStateEnvelope.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SaveStateEnvelope::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.SaveStateEnvelope.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SaveStateEnvelope::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.SaveStateEnvelope.store_name)
}

// repeated .dapr.proto.dapr.v1.StateRequest requests = 2;
inline int SaveStateEnvelope::requests_size() const {
  return requests_.size();
}
inline void SaveStateEnvelope::clear_requests() {
  requests_.Clear();
}
inline ::dapr::proto::dapr::v1::StateRequest* SaveStateEnvelope::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.SaveStateEnvelope.requests)
  return requests_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::dapr::v1::StateRequest >*
SaveStateEnvelope::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.dapr.v1.SaveStateEnvelope.requests)
  return &requests_;
}
inline const ::dapr::proto::dapr::v1::StateRequest& SaveStateEnvelope::requests(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.SaveStateEnvelope.requests)
  return requests_.Get(index);
}
inline ::dapr::proto::dapr::v1::StateRequest* SaveStateEnvelope::add_requests() {
  // @@protoc_insertion_point(field_add:dapr.proto.dapr.v1.SaveStateEnvelope.requests)
  return requests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::dapr::v1::StateRequest >&
SaveStateEnvelope::requests() const {
  // @@protoc_insertion_point(field_list:dapr.proto.dapr.v1.SaveStateEnvelope.requests)
  return requests_;
}

// -------------------------------------------------------------------

// GetStateEnvelope

// string store_name = 1;
inline void GetStateEnvelope::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateEnvelope::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.GetStateEnvelope.store_name)
  return store_name_.GetNoArena();
}
inline void GetStateEnvelope::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.GetStateEnvelope.store_name)
}
#if LANG_CXX11
inline void GetStateEnvelope::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.GetStateEnvelope.store_name)
}
#endif
inline void GetStateEnvelope::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.GetStateEnvelope.store_name)
}
inline void GetStateEnvelope::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.GetStateEnvelope.store_name)
}
inline ::std::string* GetStateEnvelope::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.GetStateEnvelope.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateEnvelope::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.GetStateEnvelope.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateEnvelope::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.GetStateEnvelope.store_name)
}

// string key = 2;
inline void GetStateEnvelope::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateEnvelope::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.GetStateEnvelope.key)
  return key_.GetNoArena();
}
inline void GetStateEnvelope::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.GetStateEnvelope.key)
}
#if LANG_CXX11
inline void GetStateEnvelope::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.GetStateEnvelope.key)
}
#endif
inline void GetStateEnvelope::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.GetStateEnvelope.key)
}
inline void GetStateEnvelope::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.GetStateEnvelope.key)
}
inline ::std::string* GetStateEnvelope::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.GetStateEnvelope.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateEnvelope::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.GetStateEnvelope.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateEnvelope::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.GetStateEnvelope.key)
}

// string consistency = 3;
inline void GetStateEnvelope::clear_consistency() {
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateEnvelope::consistency() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.GetStateEnvelope.consistency)
  return consistency_.GetNoArena();
}
inline void GetStateEnvelope::set_consistency(const ::std::string& value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.GetStateEnvelope.consistency)
}
#if LANG_CXX11
inline void GetStateEnvelope::set_consistency(::std::string&& value) {
  
  consistency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.GetStateEnvelope.consistency)
}
#endif
inline void GetStateEnvelope::set_consistency(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.GetStateEnvelope.consistency)
}
inline void GetStateEnvelope::set_consistency(const char* value, size_t size) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.GetStateEnvelope.consistency)
}
inline ::std::string* GetStateEnvelope::mutable_consistency() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.GetStateEnvelope.consistency)
  return consistency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateEnvelope::release_consistency() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.GetStateEnvelope.consistency)
  
  return consistency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateEnvelope::set_allocated_consistency(::std::string* consistency) {
  if (consistency != NULL) {
    
  } else {
    
  }
  consistency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consistency);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.GetStateEnvelope.consistency)
}

// -------------------------------------------------------------------

// GetStateResponseEnvelope

// .google.protobuf.Any data = 1;
inline bool GetStateResponseEnvelope::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::google::protobuf::Any& GetStateResponseEnvelope::_internal_data() const {
  return *data_;
}
inline const ::google::protobuf::Any& GetStateResponseEnvelope::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.GetStateResponseEnvelope.data)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* GetStateResponseEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.GetStateResponseEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* GetStateResponseEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.GetStateResponseEnvelope.data)
  return data_;
}
inline void GetStateResponseEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.GetStateResponseEnvelope.data)
}

// string etag = 2;
inline void GetStateResponseEnvelope::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateResponseEnvelope::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.GetStateResponseEnvelope.etag)
  return etag_.GetNoArena();
}
inline void GetStateResponseEnvelope::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.GetStateResponseEnvelope.etag)
}
#if LANG_CXX11
inline void GetStateResponseEnvelope::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.GetStateResponseEnvelope.etag)
}
#endif
inline void GetStateResponseEnvelope::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.GetStateResponseEnvelope.etag)
}
inline void GetStateResponseEnvelope::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.GetStateResponseEnvelope.etag)
}
inline ::std::string* GetStateResponseEnvelope::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.GetStateResponseEnvelope.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateResponseEnvelope::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.GetStateResponseEnvelope.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateResponseEnvelope::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.GetStateResponseEnvelope.etag)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSecretEnvelope

// string store_name = 1;
inline void GetSecretEnvelope::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSecretEnvelope::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.GetSecretEnvelope.store_name)
  return store_name_.GetNoArena();
}
inline void GetSecretEnvelope::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.GetSecretEnvelope.store_name)
}
#if LANG_CXX11
inline void GetSecretEnvelope::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.GetSecretEnvelope.store_name)
}
#endif
inline void GetSecretEnvelope::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.GetSecretEnvelope.store_name)
}
inline void GetSecretEnvelope::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.GetSecretEnvelope.store_name)
}
inline ::std::string* GetSecretEnvelope::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.GetSecretEnvelope.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSecretEnvelope::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.GetSecretEnvelope.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSecretEnvelope::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.GetSecretEnvelope.store_name)
}

// string key = 2;
inline void GetSecretEnvelope::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSecretEnvelope::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.GetSecretEnvelope.key)
  return key_.GetNoArena();
}
inline void GetSecretEnvelope::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.GetSecretEnvelope.key)
}
#if LANG_CXX11
inline void GetSecretEnvelope::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.GetSecretEnvelope.key)
}
#endif
inline void GetSecretEnvelope::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.GetSecretEnvelope.key)
}
inline void GetSecretEnvelope::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.GetSecretEnvelope.key)
}
inline ::std::string* GetSecretEnvelope::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.GetSecretEnvelope.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSecretEnvelope::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.GetSecretEnvelope.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSecretEnvelope::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.GetSecretEnvelope.key)
}

// map<string, string> metadata = 3;
inline int GetSecretEnvelope::metadata_size() const {
  return metadata_.size();
}
inline void GetSecretEnvelope::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetSecretEnvelope::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.dapr.v1.GetSecretEnvelope.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetSecretEnvelope::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.dapr.v1.GetSecretEnvelope.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSecretResponseEnvelope

// map<string, string> data = 1;
inline int GetSecretResponseEnvelope::data_size() const {
  return data_.size();
}
inline void GetSecretResponseEnvelope::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetSecretResponseEnvelope::data() const {
  // @@protoc_insertion_point(field_map:dapr.proto.dapr.v1.GetSecretResponseEnvelope.data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetSecretResponseEnvelope::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.dapr.v1.GetSecretResponseEnvelope.data)
  return data_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeBindingEnvelope

// string name = 1;
inline void InvokeBindingEnvelope::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingEnvelope::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.InvokeBindingEnvelope.name)
  return name_.GetNoArena();
}
inline void InvokeBindingEnvelope::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.InvokeBindingEnvelope.name)
}
#if LANG_CXX11
inline void InvokeBindingEnvelope::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.InvokeBindingEnvelope.name)
}
#endif
inline void InvokeBindingEnvelope::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.InvokeBindingEnvelope.name)
}
inline void InvokeBindingEnvelope::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.InvokeBindingEnvelope.name)
}
inline ::std::string* InvokeBindingEnvelope::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.InvokeBindingEnvelope.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingEnvelope::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.InvokeBindingEnvelope.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingEnvelope::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.InvokeBindingEnvelope.name)
}

// .google.protobuf.Any data = 2;
inline bool InvokeBindingEnvelope::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::google::protobuf::Any& InvokeBindingEnvelope::_internal_data() const {
  return *data_;
}
inline const ::google::protobuf::Any& InvokeBindingEnvelope::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.InvokeBindingEnvelope.data)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* InvokeBindingEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.InvokeBindingEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* InvokeBindingEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.InvokeBindingEnvelope.data)
  return data_;
}
inline void InvokeBindingEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.InvokeBindingEnvelope.data)
}

// map<string, string> metadata = 3;
inline int InvokeBindingEnvelope::metadata_size() const {
  return metadata_.size();
}
inline void InvokeBindingEnvelope::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeBindingEnvelope::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.dapr.v1.InvokeBindingEnvelope.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeBindingEnvelope::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.dapr.v1.InvokeBindingEnvelope.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// PublishEventEnvelope

// string topic = 1;
inline void PublishEventEnvelope::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventEnvelope::topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.PublishEventEnvelope.topic)
  return topic_.GetNoArena();
}
inline void PublishEventEnvelope::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.PublishEventEnvelope.topic)
}
#if LANG_CXX11
inline void PublishEventEnvelope::set_topic(::std::string&& value) {
  
  topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.PublishEventEnvelope.topic)
}
#endif
inline void PublishEventEnvelope::set_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.PublishEventEnvelope.topic)
}
inline void PublishEventEnvelope::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.PublishEventEnvelope.topic)
}
inline ::std::string* PublishEventEnvelope::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.PublishEventEnvelope.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventEnvelope::release_topic() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.PublishEventEnvelope.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventEnvelope::set_allocated_topic(::std::string* topic) {
  if (topic != NULL) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.PublishEventEnvelope.topic)
}

// .google.protobuf.Any data = 2;
inline bool PublishEventEnvelope::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::google::protobuf::Any& PublishEventEnvelope::_internal_data() const {
  return *data_;
}
inline const ::google::protobuf::Any& PublishEventEnvelope::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.PublishEventEnvelope.data)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* PublishEventEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.PublishEventEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* PublishEventEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.PublishEventEnvelope.data)
  return data_;
}
inline void PublishEventEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.PublishEventEnvelope.data)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// State

// string key = 1;
inline void State::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& State::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.State.key)
  return key_.GetNoArena();
}
inline void State::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.State.key)
}
#if LANG_CXX11
inline void State::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.State.key)
}
#endif
inline void State::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.State.key)
}
inline void State::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.State.key)
}
inline ::std::string* State::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.State.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* State::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.State.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void State::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.State.key)
}

// .google.protobuf.Any value = 2;
inline bool State::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::google::protobuf::Any& State::_internal_value() const {
  return *value_;
}
inline const ::google::protobuf::Any& State::value() const {
  const ::google::protobuf::Any* p = value_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.State.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* State::release_value() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.State.value)
  
  ::google::protobuf::Any* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* State::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.State.value)
  return value_;
}
inline void State::set_allocated_value(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.State.value)
}

// string etag = 3;
inline void State::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& State::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.State.etag)
  return etag_.GetNoArena();
}
inline void State::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.State.etag)
}
#if LANG_CXX11
inline void State::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.State.etag)
}
#endif
inline void State::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.State.etag)
}
inline void State::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.State.etag)
}
inline ::std::string* State::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.State.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* State::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.State.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void State::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.State.etag)
}

// map<string, string> metadata = 4;
inline int State::metadata_size() const {
  return metadata_.size();
}
inline void State::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
State::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.dapr.v1.State.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
State::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.dapr.v1.State.metadata)
  return metadata_.MutableMap();
}

// .dapr.proto.dapr.v1.StateOptions options = 5;
inline bool State::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
inline void State::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
}
inline const ::dapr::proto::dapr::v1::StateOptions& State::_internal_options() const {
  return *options_;
}
inline const ::dapr::proto::dapr::v1::StateOptions& State::options() const {
  const ::dapr::proto::dapr::v1::StateOptions* p = options_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.State.options)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::dapr::v1::StateOptions*>(
      &::dapr::proto::dapr::v1::_StateOptions_default_instance_);
}
inline ::dapr::proto::dapr::v1::StateOptions* State::release_options() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.State.options)
  
  ::dapr::proto::dapr::v1::StateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline ::dapr::proto::dapr::v1::StateOptions* State::mutable_options() {
  
  if (options_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::dapr::v1::StateOptions>(GetArenaNoVirtual());
    options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.State.options)
  return options_;
}
inline void State::set_allocated_options(::dapr::proto::dapr::v1::StateOptions* options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete options_;
  }
  if (options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    
  } else {
    
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.State.options)
}

// -------------------------------------------------------------------

// StateOptions

// string concurrency = 1;
inline void StateOptions::clear_concurrency() {
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateOptions::concurrency() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.StateOptions.concurrency)
  return concurrency_.GetNoArena();
}
inline void StateOptions::set_concurrency(const ::std::string& value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.StateOptions.concurrency)
}
#if LANG_CXX11
inline void StateOptions::set_concurrency(::std::string&& value) {
  
  concurrency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.StateOptions.concurrency)
}
#endif
inline void StateOptions::set_concurrency(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.StateOptions.concurrency)
}
inline void StateOptions::set_concurrency(const char* value, size_t size) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.StateOptions.concurrency)
}
inline ::std::string* StateOptions::mutable_concurrency() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.StateOptions.concurrency)
  return concurrency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateOptions::release_concurrency() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.StateOptions.concurrency)
  
  return concurrency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateOptions::set_allocated_concurrency(::std::string* concurrency) {
  if (concurrency != NULL) {
    
  } else {
    
  }
  concurrency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concurrency);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.StateOptions.concurrency)
}

// string consistency = 2;
inline void StateOptions::clear_consistency() {
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateOptions::consistency() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.StateOptions.consistency)
  return consistency_.GetNoArena();
}
inline void StateOptions::set_consistency(const ::std::string& value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.StateOptions.consistency)
}
#if LANG_CXX11
inline void StateOptions::set_consistency(::std::string&& value) {
  
  consistency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.StateOptions.consistency)
}
#endif
inline void StateOptions::set_consistency(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.StateOptions.consistency)
}
inline void StateOptions::set_consistency(const char* value, size_t size) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.StateOptions.consistency)
}
inline ::std::string* StateOptions::mutable_consistency() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.StateOptions.consistency)
  return consistency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateOptions::release_consistency() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.StateOptions.consistency)
  
  return consistency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateOptions::set_allocated_consistency(::std::string* consistency) {
  if (consistency != NULL) {
    
  } else {
    
  }
  consistency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consistency);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.StateOptions.consistency)
}

// .dapr.proto.dapr.v1.RetryPolicy retry_policy = 3;
inline bool StateOptions::has_retry_policy() const {
  return this != internal_default_instance() && retry_policy_ != NULL;
}
inline void StateOptions::clear_retry_policy() {
  if (GetArenaNoVirtual() == NULL && retry_policy_ != NULL) {
    delete retry_policy_;
  }
  retry_policy_ = NULL;
}
inline const ::dapr::proto::dapr::v1::RetryPolicy& StateOptions::_internal_retry_policy() const {
  return *retry_policy_;
}
inline const ::dapr::proto::dapr::v1::RetryPolicy& StateOptions::retry_policy() const {
  const ::dapr::proto::dapr::v1::RetryPolicy* p = retry_policy_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.StateOptions.retry_policy)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::dapr::v1::RetryPolicy*>(
      &::dapr::proto::dapr::v1::_RetryPolicy_default_instance_);
}
inline ::dapr::proto::dapr::v1::RetryPolicy* StateOptions::release_retry_policy() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.StateOptions.retry_policy)
  
  ::dapr::proto::dapr::v1::RetryPolicy* temp = retry_policy_;
  retry_policy_ = NULL;
  return temp;
}
inline ::dapr::proto::dapr::v1::RetryPolicy* StateOptions::mutable_retry_policy() {
  
  if (retry_policy_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::dapr::v1::RetryPolicy>(GetArenaNoVirtual());
    retry_policy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.StateOptions.retry_policy)
  return retry_policy_;
}
inline void StateOptions::set_allocated_retry_policy(::dapr::proto::dapr::v1::RetryPolicy* retry_policy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete retry_policy_;
  }
  if (retry_policy) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retry_policy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retry_policy, submessage_arena);
    }
    
  } else {
    
  }
  retry_policy_ = retry_policy;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.StateOptions.retry_policy)
}

// -------------------------------------------------------------------

// RetryPolicy

// int32 threshold = 1;
inline void RetryPolicy::clear_threshold() {
  threshold_ = 0;
}
inline ::google::protobuf::int32 RetryPolicy::threshold() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.RetryPolicy.threshold)
  return threshold_;
}
inline void RetryPolicy::set_threshold(::google::protobuf::int32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.RetryPolicy.threshold)
}

// string pattern = 2;
inline void RetryPolicy::clear_pattern() {
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RetryPolicy::pattern() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.RetryPolicy.pattern)
  return pattern_.GetNoArena();
}
inline void RetryPolicy::set_pattern(const ::std::string& value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.RetryPolicy.pattern)
}
#if LANG_CXX11
inline void RetryPolicy::set_pattern(::std::string&& value) {
  
  pattern_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.RetryPolicy.pattern)
}
#endif
inline void RetryPolicy::set_pattern(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.RetryPolicy.pattern)
}
inline void RetryPolicy::set_pattern(const char* value, size_t size) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.RetryPolicy.pattern)
}
inline ::std::string* RetryPolicy::mutable_pattern() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.RetryPolicy.pattern)
  return pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RetryPolicy::release_pattern() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.RetryPolicy.pattern)
  
  return pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RetryPolicy::set_allocated_pattern(::std::string* pattern) {
  if (pattern != NULL) {
    
  } else {
    
  }
  pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pattern);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.RetryPolicy.pattern)
}

// .google.protobuf.Duration interval = 3;
inline bool RetryPolicy::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::google::protobuf::Duration& RetryPolicy::_internal_interval() const {
  return *interval_;
}
inline const ::google::protobuf::Duration& RetryPolicy::interval() const {
  const ::google::protobuf::Duration* p = interval_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.RetryPolicy.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* RetryPolicy::release_interval() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.RetryPolicy.interval)
  
  ::google::protobuf::Duration* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* RetryPolicy::mutable_interval() {
  
  if (interval_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    interval_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.RetryPolicy.interval)
  return interval_;
}
inline void RetryPolicy::set_allocated_interval(::google::protobuf::Duration* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(interval)->GetArena();
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.RetryPolicy.interval)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StateRequest

// string key = 1;
inline void StateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.StateRequest.key)
  return key_.GetNoArena();
}
inline void StateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.StateRequest.key)
}
#if LANG_CXX11
inline void StateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.StateRequest.key)
}
#endif
inline void StateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.StateRequest.key)
}
inline void StateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.StateRequest.key)
}
inline ::std::string* StateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.StateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.StateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.StateRequest.key)
}

// .google.protobuf.Any value = 2;
inline bool StateRequest::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::google::protobuf::Any& StateRequest::_internal_value() const {
  return *value_;
}
inline const ::google::protobuf::Any& StateRequest::value() const {
  const ::google::protobuf::Any* p = value_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.StateRequest.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* StateRequest::release_value() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.StateRequest.value)
  
  ::google::protobuf::Any* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* StateRequest::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.StateRequest.value)
  return value_;
}
inline void StateRequest::set_allocated_value(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.StateRequest.value)
}

// string etag = 3;
inline void StateRequest::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StateRequest::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.StateRequest.etag)
  return etag_.GetNoArena();
}
inline void StateRequest::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.dapr.v1.StateRequest.etag)
}
#if LANG_CXX11
inline void StateRequest::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.dapr.v1.StateRequest.etag)
}
#endif
inline void StateRequest::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.dapr.v1.StateRequest.etag)
}
inline void StateRequest::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.dapr.v1.StateRequest.etag)
}
inline ::std::string* StateRequest::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.StateRequest.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateRequest::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.StateRequest.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateRequest::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.StateRequest.etag)
}

// map<string, string> metadata = 4;
inline int StateRequest::metadata_size() const {
  return metadata_.size();
}
inline void StateRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.dapr.v1.StateRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.dapr.v1.StateRequest.metadata)
  return metadata_.MutableMap();
}

// .dapr.proto.dapr.v1.StateOptions options = 5;
inline bool StateRequest::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
inline void StateRequest::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
}
inline const ::dapr::proto::dapr::v1::StateOptions& StateRequest::_internal_options() const {
  return *options_;
}
inline const ::dapr::proto::dapr::v1::StateOptions& StateRequest::options() const {
  const ::dapr::proto::dapr::v1::StateOptions* p = options_;
  // @@protoc_insertion_point(field_get:dapr.proto.dapr.v1.StateRequest.options)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::dapr::v1::StateOptions*>(
      &::dapr::proto::dapr::v1::_StateOptions_default_instance_);
}
inline ::dapr::proto::dapr::v1::StateOptions* StateRequest::release_options() {
  // @@protoc_insertion_point(field_release:dapr.proto.dapr.v1.StateRequest.options)
  
  ::dapr::proto::dapr::v1::StateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline ::dapr::proto::dapr::v1::StateOptions* StateRequest::mutable_options() {
  
  if (options_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::dapr::v1::StateOptions>(GetArenaNoVirtual());
    options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.dapr.v1.StateRequest.options)
  return options_;
}
inline void StateRequest::set_allocated_options(::dapr::proto::dapr::v1::StateOptions* options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete options_;
  }
  if (options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    
  } else {
    
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.dapr.v1.StateRequest.options)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace dapr
}  // namespace proto
}  // namespace dapr

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_dapr_2fproto_2fdapr_2fv1_2fdapr_2eproto
