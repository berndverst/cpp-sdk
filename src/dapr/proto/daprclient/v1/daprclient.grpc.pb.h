// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: dapr/proto/daprclient/v1/daprclient.proto
// Original file comments:
// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------
//
#ifndef GRPC_dapr_2fproto_2fdaprclient_2fv1_2fdaprclient_2eproto__INCLUDED
#define GRPC_dapr_2fproto_2fdaprclient_2fv1_2fdaprclient_2eproto__INCLUDED

#include "dapr/proto/daprclient/v1/daprclient.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace dapr {
namespace proto {
namespace daprclient {
namespace v1 {

// DaprClient service allows user application to interact with Dapr runtime.
// User application needs to implement DaprClient service if it needs to
// receive message from dapr runtime.
class DaprClient final {
 public:
  static constexpr char const* service_full_name() {
    return "dapr.proto.daprclient.v1.DaprClient";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status OnInvoke(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::dapr::proto::common::v1::InvokeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>> AsyncOnInvoke(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>>(AsyncOnInvokeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>> PrepareAsyncOnInvoke(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>>(PrepareAsyncOnInvokeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTopicSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>> AsyncGetTopicSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>>(AsyncGetTopicSubscriptionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>> PrepareAsyncGetTopicSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>>(PrepareAsyncGetTopicSubscriptionsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetBindingsSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>> AsyncGetBindingsSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>>(AsyncGetBindingsSubscriptionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>> PrepareAsyncGetBindingsSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>>(PrepareAsyncGetBindingsSubscriptionsRaw(context, request, cq));
    }
    virtual ::grpc::Status OnBindingEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>> AsyncOnBindingEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>>(AsyncOnBindingEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>> PrepareAsyncOnBindingEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>>(PrepareAsyncOnBindingEventRaw(context, request, cq));
    }
    virtual ::grpc::Status OnTopicEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncOnTopicEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncOnTopicEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncOnTopicEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncOnTopicEventRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      virtual void OnInvoke(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest* request, ::dapr::proto::common::v1::InvokeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTopicSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBindingsSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnBindingEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope* request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnTopicEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>* AsyncOnInvokeRaw(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::common::v1::InvokeResponse>* PrepareAsyncOnInvokeRaw(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>* AsyncGetTopicSubscriptionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>* PrepareAsyncGetTopicSubscriptionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>* AsyncGetBindingsSubscriptionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>* PrepareAsyncGetBindingsSubscriptionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>* AsyncOnBindingEventRaw(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>* PrepareAsyncOnBindingEventRaw(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncOnTopicEventRaw(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncOnTopicEventRaw(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status OnInvoke(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::dapr::proto::common::v1::InvokeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>> AsyncOnInvoke(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>>(AsyncOnInvokeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>> PrepareAsyncOnInvoke(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>>(PrepareAsyncOnInvokeRaw(context, request, cq));
    }
    ::grpc::Status GetTopicSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>> AsyncGetTopicSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>>(AsyncGetTopicSubscriptionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>> PrepareAsyncGetTopicSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>>(PrepareAsyncGetTopicSubscriptionsRaw(context, request, cq));
    }
    ::grpc::Status GetBindingsSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>> AsyncGetBindingsSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>>(AsyncGetBindingsSubscriptionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>> PrepareAsyncGetBindingsSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>>(PrepareAsyncGetBindingsSubscriptionsRaw(context, request, cq));
    }
    ::grpc::Status OnBindingEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>> AsyncOnBindingEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>>(AsyncOnBindingEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>> PrepareAsyncOnBindingEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>>(PrepareAsyncOnBindingEventRaw(context, request, cq));
    }
    ::grpc::Status OnTopicEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncOnTopicEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncOnTopicEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncOnTopicEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncOnTopicEventRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void OnInvoke(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest* request, ::dapr::proto::common::v1::InvokeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTopicSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response, std::function<void(::grpc::Status)>) override;
      void GetBindingsSubscriptions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response, std::function<void(::grpc::Status)>) override;
      void OnBindingEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope* request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response, std::function<void(::grpc::Status)>) override;
      void OnTopicEvent(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>* AsyncOnInvokeRaw(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::common::v1::InvokeResponse>* PrepareAsyncOnInvokeRaw(::grpc::ClientContext* context, const ::dapr::proto::common::v1::InvokeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>* AsyncGetTopicSubscriptionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>* PrepareAsyncGetTopicSubscriptionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>* AsyncGetBindingsSubscriptionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>* PrepareAsyncGetBindingsSubscriptionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>* AsyncOnBindingEventRaw(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>* PrepareAsyncOnBindingEventRaw(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncOnTopicEventRaw(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncOnTopicEventRaw(::grpc::ClientContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_OnInvoke_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTopicSubscriptions_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBindingsSubscriptions_;
    const ::grpc::internal::RpcMethod rpcmethod_OnBindingEvent_;
    const ::grpc::internal::RpcMethod rpcmethod_OnTopicEvent_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status OnInvoke(::grpc::ServerContext* context, const ::dapr::proto::common::v1::InvokeRequest* request, ::dapr::proto::common::v1::InvokeResponse* response);
    virtual ::grpc::Status GetTopicSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response);
    virtual ::grpc::Status GetBindingsSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response);
    virtual ::grpc::Status OnBindingEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope* request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response);
    virtual ::grpc::Status OnTopicEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_OnInvoke : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_OnInvoke() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_OnInvoke() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnInvoke(::grpc::ServerContext* context, const ::dapr::proto::common::v1::InvokeRequest* request, ::dapr::proto::common::v1::InvokeResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnInvoke(::grpc::ServerContext* context, ::dapr::proto::common::v1::InvokeRequest* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::common::v1::InvokeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTopicSubscriptions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetTopicSubscriptions() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetTopicSubscriptions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTopicSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTopicSubscriptions(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBindingsSubscriptions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetBindingsSubscriptions() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetBindingsSubscriptions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBindingsSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBindingsSubscriptions(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnBindingEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_OnBindingEvent() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_OnBindingEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnBindingEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope* request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnBindingEvent(::grpc::ServerContext* context, ::dapr::proto::daprclient::v1::BindingEventEnvelope* request, ::grpc::ServerAsyncResponseWriter< ::dapr::proto::daprclient::v1::BindingResponseEnvelope>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnTopicEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_OnTopicEvent() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_OnTopicEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnTopicEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnTopicEvent(::grpc::ServerContext* context, ::dapr::proto::daprclient::v1::CloudEventEnvelope* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_OnInvoke<WithAsyncMethod_GetTopicSubscriptions<WithAsyncMethod_GetBindingsSubscriptions<WithAsyncMethod_OnBindingEvent<WithAsyncMethod_OnTopicEvent<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_OnInvoke : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_OnInvoke() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_OnInvoke() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnInvoke(::grpc::ServerContext* context, const ::dapr::proto::common::v1::InvokeRequest* request, ::dapr::proto::common::v1::InvokeResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTopicSubscriptions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetTopicSubscriptions() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetTopicSubscriptions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTopicSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBindingsSubscriptions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetBindingsSubscriptions() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetBindingsSubscriptions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBindingsSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnBindingEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_OnBindingEvent() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_OnBindingEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnBindingEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope* request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnTopicEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_OnTopicEvent() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_OnTopicEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnTopicEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnInvoke : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_OnInvoke() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_OnInvoke() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnInvoke(::grpc::ServerContext* context, const ::dapr::proto::common::v1::InvokeRequest* request, ::dapr::proto::common::v1::InvokeResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnInvoke(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTopicSubscriptions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetTopicSubscriptions() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetTopicSubscriptions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTopicSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTopicSubscriptions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBindingsSubscriptions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetBindingsSubscriptions() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetBindingsSubscriptions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBindingsSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBindingsSubscriptions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnBindingEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_OnBindingEvent() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_OnBindingEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnBindingEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope* request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnBindingEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnTopicEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_OnTopicEvent() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_OnTopicEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnTopicEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnTopicEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnInvoke : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_OnInvoke() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::dapr::proto::common::v1::InvokeRequest, ::dapr::proto::common::v1::InvokeResponse>(std::bind(&WithStreamedUnaryMethod_OnInvoke<BaseClass>::StreamedOnInvoke, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_OnInvoke() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnInvoke(::grpc::ServerContext* context, const ::dapr::proto::common::v1::InvokeRequest* request, ::dapr::proto::common::v1::InvokeResponse* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnInvoke(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::common::v1::InvokeRequest,::dapr::proto::common::v1::InvokeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTopicSubscriptions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetTopicSubscriptions() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::protobuf::Empty, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>(std::bind(&WithStreamedUnaryMethod_GetTopicSubscriptions<BaseClass>::StreamedGetTopicSubscriptions, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetTopicSubscriptions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTopicSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTopicSubscriptions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::dapr::proto::daprclient::v1::GetTopicSubscriptionsEnvelope>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBindingsSubscriptions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetBindingsSubscriptions() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::protobuf::Empty, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>(std::bind(&WithStreamedUnaryMethod_GetBindingsSubscriptions<BaseClass>::StreamedGetBindingsSubscriptions, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetBindingsSubscriptions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBindingsSubscriptions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBindingsSubscriptions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::dapr::proto::daprclient::v1::GetBindingsSubscriptionsEnvelope>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnBindingEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_OnBindingEvent() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::dapr::proto::daprclient::v1::BindingEventEnvelope, ::dapr::proto::daprclient::v1::BindingResponseEnvelope>(std::bind(&WithStreamedUnaryMethod_OnBindingEvent<BaseClass>::StreamedOnBindingEvent, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_OnBindingEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnBindingEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::BindingEventEnvelope* request, ::dapr::proto::daprclient::v1::BindingResponseEnvelope* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnBindingEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::daprclient::v1::BindingEventEnvelope,::dapr::proto::daprclient::v1::BindingResponseEnvelope>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnTopicEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_OnTopicEvent() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::dapr::proto::daprclient::v1::CloudEventEnvelope, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_OnTopicEvent<BaseClass>::StreamedOnTopicEvent, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_OnTopicEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnTopicEvent(::grpc::ServerContext* context, const ::dapr::proto::daprclient::v1::CloudEventEnvelope* request, ::google::protobuf::Empty* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnTopicEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dapr::proto::daprclient::v1::CloudEventEnvelope,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_OnInvoke<WithStreamedUnaryMethod_GetTopicSubscriptions<WithStreamedUnaryMethod_GetBindingsSubscriptions<WithStreamedUnaryMethod_OnBindingEvent<WithStreamedUnaryMethod_OnTopicEvent<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_OnInvoke<WithStreamedUnaryMethod_GetTopicSubscriptions<WithStreamedUnaryMethod_GetBindingsSubscriptions<WithStreamedUnaryMethod_OnBindingEvent<WithStreamedUnaryMethod_OnTopicEvent<Service > > > > > StreamedService;
};

}  // namespace v1
}  // namespace daprclient
}  // namespace proto
}  // namespace dapr


#endif  // GRPC_dapr_2fproto_2fdaprclient_2fv1_2fdaprclient_2eproto__INCLUDED
